'use client'
import React, { useState } from "react";
import Editor from "./Editor";
import toastr from "toastr";
import "toastr/build/toastr.min.css";
import { toast } from "react-toastify";
import { WrittingAss } from "@/app/services/IntroService";
import { useAppDispatch, useAppSelector } from '@/app/Redux/lib/hooks';
import { setNotes } from '@/app/Redux/lib/features/product/productSlice';
import { useSelector } from "react-redux";

const Addpage = () => {
  const [loading, setLoading] = useState(false);   
  const handleClick = () => {
    toastr.options = {
      closeButton: true,
      debug: false,
      newestOnTop: false,
      progressBar: true, // Added progress bar for better visual feedback
      positionClass: "toast-top-right",
      preventDuplicates: true, // Avoid duplicate messages
      onclick: null,
      showDuration: "300",
      hideDuration: "1000",
      timeOut: "30000", // Reduced timeout for better UX
      extendedTimeOut: "1000",
      showEasing: "swing",
      hideEasing: "linear",
      showMethod: "fadeIn",
      hideMethod: "fadeOut",
      width: "350px", // Adjusted width for better appearance
      onShown: () => {
        document.querySelectorAll('.toast').forEach(toast => {
          toast.style.backgroundColor = '#023D6D'; // Dark blue background
          toast.style.color = 'white'; // White text color
          toast.style.opacity = '1'; // Full opacity
        });
      }
    };
  
    toastr.info(
      `The letter below was generated by our writing assistant. You may keep all of it, some of it or none of it. Use the box below as your own word processor to edit the text to your liking. If you'd like to generate a different version, click the Writing Assistant button below the box. You may edit it to your liking by clicking in the box and deleting and rewriting with your own words. When you feel good about your letter, click the preview button in the bottom right-hand corner.`
    );
  };
  const dispatch = useAppDispatch();
  const data = useSelector((state) => state.api.notes);

  const NewNote = async () => {
    setLoading(true); // Set loading to true before making the API call
    try {
      const result = await WrittingAss(data);
      setLoading(false)
      if (result.status) {
        dispatch(setNotes(result.note.replaceAll('\n\n', '<br/>')));
        toast.success(result.message);
      } else {
        toast.error(result.message);
      }
    } catch (error) {
      console.error('Error fetching note:', error);
      toast.error('Failed to fetch note.');
    } finally {
      setLoading(false); // Set loading to false after handling the API response
    }
  }
  return (
    <div>
      <div className="text-center justify-center items-center montserrat">
        <button
          className="bg-primary abbbbb1 text-sm leading-4 font-normal text-white py-3 px-4 rounded"
          onClick={() => handleClick(toastr.info)}
        >
          Instruction
        </button>
      </div>
      <div className="w-[100%] pt-10 p-2 rounded space-y-10">
        <div className="w-[100%] overflow-x-hidden h-[500px] border-primary border-[6px] rounded">
          <Editor />
        </div>
        <div className="text-center justify-center items-center">
          <button
            onClick={NewNote}
            className="bg-[#273C66] montserrat text-sm leading-4 font-normal hover:bg-[#21A7D0] text-white py-3 px-4 rounded"
          >
            {loading ? "Loading..." : "Writing Assistant"}
          </button>
        </div>
      </div>
    </div>
  );
};

export default Addpage;
